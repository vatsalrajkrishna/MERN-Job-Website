[{"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\index.js":"1","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\reportWebVitals.js":"2","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\App.js":"3","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Welcome.js":"4","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Logout.js":"5","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Navbar.js":"6","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Login.js":"7","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Signup.js":"8","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Home.js":"9","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Profile.js":"10","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\CreateJobs.js":"11","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\MyJobs.js":"12","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Applications.js":"13","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\JobApplications.js":"14","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\MessagePopup.js":"15","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\Profile.js":"16","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\isAuth.js":"17","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\apiList.js":"18","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\PasswordInput.js":"19","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\EmailInput.js":"20","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\FileUploadInput.js":"21","H:\\JOB WEBSITE\\client\\src\\index.js":"22","H:\\JOB WEBSITE\\client\\src\\App.js":"23","H:\\JOB WEBSITE\\client\\src\\component\\Welcome.js":"24","H:\\JOB WEBSITE\\client\\src\\component\\Navbar.js":"25","H:\\JOB WEBSITE\\client\\src\\component\\Logout.js":"26","H:\\JOB WEBSITE\\client\\src\\component\\Signup.js":"27","H:\\JOB WEBSITE\\client\\src\\component\\Home.js":"28","H:\\JOB WEBSITE\\client\\src\\component\\Login.js":"29","H:\\JOB WEBSITE\\client\\src\\component\\Profile.js":"30","H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\MyJobs.js":"31","H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\CreateJobs.js":"32","H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\JobApplications.js":"33","H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\Profile.js":"34","H:\\JOB WEBSITE\\client\\src\\lib\\isAuth.js":"35","H:\\JOB WEBSITE\\client\\src\\lib\\MessagePopup.js":"36","H:\\JOB WEBSITE\\client\\src\\component\\Applications.js":"37","H:\\JOB WEBSITE\\client\\src\\lib\\EmailInput.js":"38","H:\\JOB WEBSITE\\client\\src\\lib\\PasswordInput.js":"39","H:\\JOB WEBSITE\\client\\src\\lib\\apiList.js":"40","H:\\JOB WEBSITE\\client\\src\\lib\\FileUploadInput.js":"41","H:\\JOB WEBSITE\\client\\src\\reportWebVitals.js":"42"},{"size":500,"mtime":1612178250000,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1612178250000,"results":"45","hashOfConfig":"44"},{"size":3149,"mtime":1626801084474,"results":"46","hashOfConfig":"44"},{"size":1975,"mtime":1626873189220,"results":"47","hashOfConfig":"44"},{"size":489,"mtime":1612178250000,"results":"48","hashOfConfig":"44"},{"size":2595,"mtime":1626869693940,"results":"49","hashOfConfig":"44"},{"size":4456,"mtime":1626719928926,"results":"50","hashOfConfig":"44"},{"size":11345,"mtime":1626870028722,"results":"51","hashOfConfig":"44"},{"size":9317,"mtime":1626870282048,"results":"52","hashOfConfig":"44"},{"size":5670,"mtime":1626867157205,"results":"53","hashOfConfig":"44"},{"size":7327,"mtime":1626868853134,"results":"54","hashOfConfig":"44"},{"size":12954,"mtime":1626805639683,"results":"55","hashOfConfig":"44"},{"size":4491,"mtime":1626869602091,"results":"56","hashOfConfig":"44"},{"size":10688,"mtime":1626869443232,"results":"57","hashOfConfig":"44"},{"size":503,"mtime":1612178250000,"results":"58","hashOfConfig":"44"},{"size":4502,"mtime":1626868319116,"results":"59","hashOfConfig":"44"},{"size":165,"mtime":1612178250000,"results":"60","hashOfConfig":"44"},{"size":353,"mtime":1626864163391,"results":"61","hashOfConfig":"44"},{"size":1666,"mtime":1626720891586,"results":"62","hashOfConfig":"44"},{"size":1905,"mtime":1626720718749,"results":"63","hashOfConfig":"44"},{"size":3279,"mtime":1612178250000,"results":"64","hashOfConfig":"44"},{"size":500,"mtime":1626693450000,"results":"65","hashOfConfig":"66"},{"size":3149,"mtime":1626801084474,"results":"67","hashOfConfig":"66"},{"size":1975,"mtime":1626873189220,"results":"68","hashOfConfig":"66"},{"size":2595,"mtime":1626869693940,"results":"69","hashOfConfig":"66"},{"size":489,"mtime":1626779850000,"results":"70","hashOfConfig":"66"},{"size":11345,"mtime":1626870028722,"results":"71","hashOfConfig":"66"},{"size":9317,"mtime":1626870282048,"results":"72","hashOfConfig":"66"},{"size":4456,"mtime":1626719928926,"results":"73","hashOfConfig":"66"},{"size":5670,"mtime":1626867157205,"results":"74","hashOfConfig":"66"},{"size":12954,"mtime":1626805639683,"results":"75","hashOfConfig":"66"},{"size":7327,"mtime":1626868853134,"results":"76","hashOfConfig":"66"},{"size":10688,"mtime":1626869443232,"results":"77","hashOfConfig":"66"},{"size":4502,"mtime":1626868319116,"results":"78","hashOfConfig":"66"},{"size":165,"mtime":1626699311000,"results":"79","hashOfConfig":"66"},{"size":503,"mtime":1626780396000,"results":"80","hashOfConfig":"66"},{"size":4491,"mtime":1626869602091,"results":"81","hashOfConfig":"66"},{"size":1905,"mtime":1626720718749,"results":"82","hashOfConfig":"66"},{"size":1666,"mtime":1626720891586,"results":"83","hashOfConfig":"66"},{"size":353,"mtime":1626864163391,"results":"84","hashOfConfig":"66"},{"size":3279,"mtime":1626866250000,"results":"85","hashOfConfig":"66"},{"size":362,"mtime":1612178250000,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"24bst4",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o7kvuy",{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\index.js",[],["181","182"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\App.js",["183"],"import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <BrowserRouter>\n      <SetPopupContext.Provider value={setPopup}>\n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Welcome.js",["184","185","186","187"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Logout.js",["188"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Navbar.js",["189"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Login.js",["190","191"],"import { useContext, useState } from \"react\";\nimport { Grid, TextField, Button, Typography, Link, makeStyles, Card} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n    background: \"#292929\",\n    color: \"#fff\"\n  },\n  inputBox: {\n    width: \"400px\",\n    color: \"white\",\n  },\n  submitButton: {\n    backgroundColor: \"#fbc02d\",\n  },\n  Link: {\n    color: \"#fbc02d\",\n    fontWeight: \"bolder\"\n  }, \n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  }\n  \n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Card className={classes.body} style={{ border: \"none\", boxShadow: \"none\" }}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n      <img src={'../logo-only-white.svg'} height=\"70\" />\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            LOGIN\n          </Typography>\n        </Grid>\n        <Grid item>\n        <TextField id=\"outlined-basic\" \n          label=\"Email\" \n          value={loginDetails.email} \n          onChange={(event) => handleInput(\"email\", event.target.value)}\n          type=\"email\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          InputProps={{\n            className: classes.input\n          }}\n          InputLabelProps={{\n            className: classes.floatingLabelFocusStyle\n          }} \n          />\n        </Grid>\n        <Grid item>\n        <TextField id=\"outlined-basic\" \n          label=\"Password\" \n          value={loginDetails.password} \n          onChange={(event) => handleInput(\"password\", event.target.value)}\n          type=\"password\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          InputProps={{\n            className: classes.input\n          }}\n          InputLabelProps={{\n            className: classes.floatingLabelFocusStyle\n          }} \n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            LOGIN\n          </Button>\n        </Grid>\n        <Grid item>\n          <Link href=\"/signup\" variant=\"body2\" className={classes.Link}>\n                  Don't have an account? Sign Up\n          </Link>\n          </Grid>\n      </Grid>\n      </Card>\n  );\n};\n\nexport default Login;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Signup.js",["192","193"],"import { useState, useContext } from \"react\";\nimport { Grid, TextField, Button, Typography, makeStyles, Card, Link, MenuItem} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n    background: \"#292929\",\n    color: \"#fff\"\n  },\n  inputBox: {\n    width: \"400px\",\n    color: \"white\"\n  },\n  submitButton: {\n    backgroundColor: \"#fbc02d\",\n  },\n  Link: {\n    color: \"#fbc02d\",\n    fontWeight: \"bolder\"\n  }, \n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  }\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    skills: [],\n    resume: \"\",\n    bio: \"\",\n  });\n\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Card className={classes.body} style={{ border: \"none\", boxShadow: \"none\" }}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n      <img src={'../logo-only-white.svg'} height=\"70\" />\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            CREATE ACCOUNT\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n            InputProps={{\n              className: classes.input\n            }}\n            InputLabelProps={{\n              className: classes.floatingLabelFocusStyle\n            }} \n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            InputProps={{\n              className: classes.input\n            }}\n            InputLabelProps={{\n              className: classes.floatingLabelFocusStyle\n            }} \n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            InputProps={{\n              className: classes.input\n            }}\n            InputLabelProps={{\n              className: classes.floatingLabelFocusStyle\n            }} \n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n            InputProps={{\n              className: classes.input\n            }}\n            InputLabelProps={{\n              className: classes.floatingLabelFocusStyle\n            }} \n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n                InputProps={{\n                  className: classes.input\n                }}\n                InputLabelProps={{\n                  className: classes.floatingLabelFocusStyle\n                }} \n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (.pdf)\"\n                icon={<DescriptionIcon />}\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n                InputProps={{\n                  className: classes.input\n                }}\n                InputLabelProps={{\n                  className: classes.floatingLabelFocusStyle\n                }} \n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 300 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 300\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n                InputProps={{\n                  className: classes.input\n                }}\n                InputLabelProps={{\n                  className: classes.floatingLabelFocusStyle\n                }} \n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n        <Grid item>\n          <Link href=\"/login\" variant=\"body2\" className={classes.Link}>\n                  Already have an Account? Login\n          </Link>\n        </Grid>\n      </Grid>  \n    </Card>\n  );\n};\n\nexport default Login;","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Home.js",["194","195","196","197","198","199"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Profile.js",["200","201","202","203","204","205","206"],"import { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Typography, Card, makeStyles, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { SetPopupContext } from \"../App\";\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n    background: \"#292929\",\n    color: \"#fff\"\n  },\n  inputBox: {\n    width: \"400px\",\n    color: \"white\",\n  },\n  submitButton: {\n    backgroundColor: \"#fbc02d\",\n  },\n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    skills: [],\n    resume: \"\",\n  });\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n\n    let updatedDetails = {\n      ...profileDetails,\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n\n  return (\n    <>\n     <Card className={classes.body} style={{  padding: \"20px\", border: \"none\", boxShadow: \"none\" }} >\n            <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n            <img src={'../../user-profile.JPG'} height=\"70\" />\n              <Grid item>\n                <Typography variant=\"h4\" component=\"h2\">\n                  PROFILE\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{\n                    className: classes.floatingLabelFocusStyle\n                  }} \n                />\n              </Grid>\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{\n                    className: classes.floatingLabelFocusStyle\n                  }} \n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (.pdf)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{\n                    className: classes.floatingLabelFocusStyle\n                  }} \n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submitButton}\n                  onClick={() => handleUpdate()}\n                  >\n                  Update Details\n                </Button>\n              </Grid>\n            </Grid>\n           \n         </Card>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\CreateJobs.js",["207","208"],"import { useContext, useState } from \"react\";\nimport { Button, Grid, Typography, Card, makeStyles, TextField, MenuItem} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n    background: \"#292929\",\n    color: \"#fff\"\n  },\n  inputBox: {\n    width: \"400px\",\n    color: \"white\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    backgroundColor: \"#fbc02d\",\n  },\n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: \"Full Time\",\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: \"\",\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: \"Full Time\",\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n       <Card className={classes.body} style={{ border: \"none\", boxShadow: \"none\" }}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            CREATE JOB\n          </Typography>\n        </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    className={classes.inputBox}\n                    onChange={(event) =>\n                      handleInput(\"title\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      className: classes.input\n                    }}\n                    InputLabelProps={{\n                      className: classes.floatingLabelFocusStyle\n                    }} \n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                    InputProps={{\n                      className: classes.input\n                    }}\n                    InputLabelProps={{\n                      className: classes.floatingLabelFocusStyle\n                    }} \n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    className={classes.inputBox}\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput(\"jobType\", event.target.value);\n                    }}\n                    fullWidth\n                    InputProps={{\n                      className: classes.input\n                    }}\n                    InputLabelProps={{\n                      className: classes.floatingLabelFocusStyle\n                    }} \n                  >\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    className={classes.inputBox}\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput(\"salary\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                    InputProps={{\n                      className: classes.input\n                    }}\n                    InputLabelProps={{\n                      className: classes.floatingLabelFocusStyle\n                    }} \n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    className={classes.inputBox}\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput(\"deadline\", event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      className: classes.input\n                    }}\n                    InputLabelProps={{\n                      className: classes.floatingLabelFocusStyle\n                    }} \n                  />\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submitButton}\n                    onClick={() => handleUpdate()}\n                    >\n                    CREATE JOB\n                  </Button>\n                </Grid>\n              </Grid>\n            </Card>\n    </>\n  );\n};\n\nexport default CreateJobs;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\MyJobs.js",["209","210","211","212","213"],"import { useState, useEffect, useContext } from \"react\";\nimport { Button, Chip, Grid, IconButton, InputAdornment, makeStyles, Card, TextField, Typography, Modal, Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { SetPopupContext } from \"../../App\";\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  chip: {\n    backgroundColor: \"LightBlue\"\n  },\n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  },\n  icons: {\n    height: \"100px\",\n    marginLeft: \"15px\",\n    width: \"15%\"\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n  const postedOn = new Date(job.dateOfPosting);\n\n  return (\n    <Card className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h6\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n          <Grid item>\n            <Chip className={classes.chip} label={job.jobType} style={{ marginRight: \"2px\" }}  />\n            <Chip className={classes.chip} label={\"₹\"+job.salary+\"/Month\"} style={{ marginRight: \"2px\" }} />\n            <Chip className={classes.chip} label={postedOn.toLocaleDateString()} style={{ marginRight: \"2px\" }} />\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Tooltip title=\"Applications\">\n            <PersonIcon\n              variant=\"contained\"\n              className={classes.icons}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n              style={{\n                color: \"blue\",\n              }}\n            />\n            </Tooltip>\n            <Tooltip title=\"Edit\">\n            <EditIcon\n              variant=\"outlined\"\n              className={classes.icons}\n              onClick={() => {\n                setOpenUpdate(true);\n              }}\n              style={{\n                color: \"#41bb41\",\n              }}\n            />\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n            <DeleteIcon\n              variant=\"contained\"\n              className={classes.icons}\n              color=\"secondary\"\n              onClick={() => {\n                setOpen(true);\n              }}\n            />\n             </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Card\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleDelete()}\n              >\n                Delete\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleClose()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Card>\n      </Modal>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Card\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n            <Grid item>\n              <TextField\n                label=\"Application Deadline\"\n                type=\"datetime-local\"\n                value={jobDetails.deadline.substr(0, 16)}\n                onChange={(event) => {\n                  handleInput(\"deadline\", event.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Card>\n      </Modal>\n    </Card>\n  );\n};\n\nconst MyJobs = (props) => {\n  const classes = useStyles();\n  const [jobs, setJobs] = useState([]);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [`myjobs=1`];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h4\">MY JOBS</Typography>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n              InputProps={{\n                className: classes.input\n              }}\n              InputLabelProps={{\n                className: classes.floatingLabelFocusStyle\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} getData={getData} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Jobs Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MyJobs;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\Applications.js",["214","215","216","217"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\JobApplications.js",["218","219"],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\MessagePopup.js",["220"],"import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\component\\recruiter\\Profile.js",["221","222","223"],"import { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Typography, Card, makeStyles, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n    background: \"#292929\",\n    color: \"#fff\"\n  },\n  inputBox: {\n    width: \"400px\",\n    color: \"white\",\n  },\n  submitButton: {\n    backgroundColor: \"#fbc02d\",\n  },\n  input: {\n    color: \"white\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"grey\"\n  },\n  notchedOutline: {\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    '&:hover': {\n      borderColor: '#FFFFFF',\n      borderWidth: 2\n    },\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n  });\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n          <Card className={classes.body} style={{  padding: \"20px\", border: \"none\", boxShadow: \"none\" }} >\n            <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n            <img src={'../../user-profile.JPG'} height=\"70\" />\n              <Grid item>\n                <Typography variant=\"h4\" component=\"h2\">\n                  PROFILE\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{\n                    className: classes.floatingLabelFocusStyle\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  className={classes.inputBox}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{\n                    className: classes.floatingLabelFocusStyle\n                  }} \n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleUpdate()}\n                  className={classes.submitButton}\n                  >\n                  Update Details\n                </Button>\n              </Grid>\n            </Grid>\n          </Card>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\isAuth.js",[],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\apiList.js",[],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\PasswordInput.js",[],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\EmailInput.js",[],"C:\\Users\\vatsa\\Desktop\\job-portal-main\\client\\src\\lib\\FileUploadInput.js",[],"H:\\JOB WEBSITE\\client\\src\\index.js",[],"H:\\JOB WEBSITE\\client\\src\\App.js",["224"],"H:\\JOB WEBSITE\\client\\src\\component\\Welcome.js",["225","226","227","228"],"H:\\JOB WEBSITE\\client\\src\\component\\Navbar.js",["229"],"H:\\JOB WEBSITE\\client\\src\\component\\Logout.js",["230"],"H:\\JOB WEBSITE\\client\\src\\component\\Signup.js",["231","232"],"H:\\JOB WEBSITE\\client\\src\\component\\Home.js",["233","234","235","236","237","238"],"H:\\JOB WEBSITE\\client\\src\\component\\Login.js",["239","240"],"H:\\JOB WEBSITE\\client\\src\\component\\Profile.js",["241","242","243","244","245","246","247"],"H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\MyJobs.js",["248","249","250","251","252"],"H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\CreateJobs.js",["253","254"],"H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\JobApplications.js",["255","256"],"H:\\JOB WEBSITE\\client\\src\\component\\recruiter\\Profile.js",["257","258","259"],"H:\\JOB WEBSITE\\client\\src\\lib\\isAuth.js",[],"H:\\JOB WEBSITE\\client\\src\\lib\\MessagePopup.js",["260"],"H:\\JOB WEBSITE\\client\\src\\component\\Applications.js",["261","262","263","264"],"H:\\JOB WEBSITE\\client\\src\\lib\\EmailInput.js",[],"H:\\JOB WEBSITE\\client\\src\\lib\\PasswordInput.js",[],"H:\\JOB WEBSITE\\client\\src\\lib\\apiList.js",[],"H:\\JOB WEBSITE\\client\\src\\lib\\FileUploadInput.js",[],"H:\\JOB WEBSITE\\client\\src\\reportWebVitals.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":18,"column":8,"nodeType":"271","messageId":"272","endLine":18,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":14,"column":7,"nodeType":"275","endLine":14,"endColumn":58},{"ruleId":"273","severity":1,"message":"274","line":27,"column":9,"nodeType":"275","endLine":27,"endColumn":88},{"ruleId":"273","severity":1,"message":"274","line":28,"column":9,"nodeType":"275","endLine":28,"endColumn":88},{"ruleId":"273","severity":1,"message":"274","line":29,"column":9,"nodeType":"275","endLine":29,"endColumn":88},{"ruleId":"276","severity":1,"message":"277","line":16,"column":6,"nodeType":"278","endLine":16,"endColumn":8,"suggestions":"279"},{"ruleId":"273","severity":1,"message":"274","line":30,"column":11,"nodeType":"275","endLine":30,"endColumn":91},{"ruleId":"269","severity":1,"message":"280","line":73,"column":9,"nodeType":"271","messageId":"272","endLine":73,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":123,"column":7,"nodeType":"275","endLine":123,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":226,"column":7,"nodeType":"275","endLine":226,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":365,"column":32,"nodeType":"283","messageId":"284","endLine":365,"endColumn":34},{"ruleId":"281","severity":1,"message":"282","line":157,"column":28,"nodeType":"283","messageId":"284","endLine":157,"endColumn":30},{"ruleId":"276","severity":1,"message":"285","line":206,"column":6,"nodeType":"278","endLine":206,"endColumn":8,"suggestions":"286"},{"ruleId":"281","severity":1,"message":"282","line":222,"column":33,"nodeType":"283","messageId":"284","endLine":222,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":228,"column":33,"nodeType":"283","messageId":"284","endLine":228,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":234,"column":32,"nodeType":"283","messageId":"284","endLine":234,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":328,"column":15,"nodeType":"289","endLine":330,"endColumn":17},{"ruleId":"269","severity":1,"message":"290","line":42,"column":10,"nodeType":"271","messageId":"272","endLine":42,"endColumn":18},{"ruleId":"269","severity":1,"message":"291","line":42,"column":20,"nodeType":"271","messageId":"272","endLine":42,"endColumn":31},{"ruleId":"269","severity":1,"message":"292","line":43,"column":10,"nodeType":"271","messageId":"272","endLine":43,"endColumn":14},{"ruleId":"276","severity":1,"message":"285","line":60,"column":6,"nodeType":"278","endLine":60,"endColumn":8,"suggestions":"293"},{"ruleId":"269","severity":1,"message":"294","line":83,"column":9,"nodeType":"271","messageId":"272","endLine":83,"endColumn":20},{"ruleId":"269","severity":1,"message":"295","line":87,"column":9,"nodeType":"271","messageId":"272","endLine":87,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":126,"column":13,"nodeType":"275","endLine":126,"endColumn":63},{"ruleId":"287","severity":1,"message":"288","line":193,"column":21,"nodeType":"289","endLine":195,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":218,"column":21,"nodeType":"289","endLine":220,"endColumn":23},{"ruleId":"276","severity":1,"message":"285","line":341,"column":6,"nodeType":"278","endLine":341,"endColumn":8,"suggestions":"296"},{"ruleId":"281","severity":1,"message":"282","line":357,"column":33,"nodeType":"283","messageId":"284","endLine":357,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":363,"column":33,"nodeType":"283","messageId":"284","endLine":363,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":369,"column":32,"nodeType":"283","messageId":"284","endLine":369,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":460,"column":15,"nodeType":"289","endLine":462,"endColumn":17},{"ruleId":"269","severity":1,"message":"297","line":39,"column":9,"nodeType":"271","messageId":"272","endLine":39,"endColumn":17},{"ruleId":"269","severity":1,"message":"292","line":40,"column":10,"nodeType":"271","messageId":"272","endLine":40,"endColumn":14},{"ruleId":"269","severity":1,"message":"294","line":45,"column":9,"nodeType":"271","messageId":"272","endLine":45,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":111,"column":6,"nodeType":"278","endLine":111,"endColumn":8,"suggestions":"298"},{"ruleId":"269","severity":1,"message":"299","line":320,"column":25,"nodeType":"271","messageId":"272","endLine":320,"endColumn":41},{"ruleId":"276","severity":1,"message":"285","line":340,"column":6,"nodeType":"278","endLine":340,"endColumn":8,"suggestions":"300"},{"ruleId":"269","severity":1,"message":"301","line":1,"column":20,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"285","line":55,"column":6,"nodeType":"278","endLine":55,"endColumn":8,"suggestions":"302"},{"ruleId":"273","severity":1,"message":"274","line":111,"column":13,"nodeType":"275","endLine":111,"endColumn":63},{"ruleId":"281","severity":1,"message":"282","line":143,"column":34,"nodeType":"283","messageId":"284","endLine":143,"endColumn":36},{"ruleId":"269","severity":1,"message":"270","line":18,"column":8,"nodeType":"271","messageId":"272","endLine":18,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":14,"column":7,"nodeType":"275","endLine":14,"endColumn":58},{"ruleId":"273","severity":1,"message":"274","line":27,"column":9,"nodeType":"275","endLine":27,"endColumn":88},{"ruleId":"273","severity":1,"message":"274","line":28,"column":9,"nodeType":"275","endLine":28,"endColumn":88},{"ruleId":"273","severity":1,"message":"274","line":29,"column":9,"nodeType":"275","endLine":29,"endColumn":88},{"ruleId":"273","severity":1,"message":"274","line":30,"column":11,"nodeType":"275","endLine":30,"endColumn":91},{"ruleId":"276","severity":1,"message":"277","line":16,"column":6,"nodeType":"278","endLine":16,"endColumn":8,"suggestions":"303"},{"ruleId":"273","severity":1,"message":"274","line":226,"column":7,"nodeType":"275","endLine":226,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":365,"column":32,"nodeType":"283","messageId":"284","endLine":365,"endColumn":34},{"ruleId":"281","severity":1,"message":"282","line":157,"column":28,"nodeType":"283","messageId":"284","endLine":157,"endColumn":30},{"ruleId":"276","severity":1,"message":"285","line":206,"column":6,"nodeType":"278","endLine":206,"endColumn":8,"suggestions":"304"},{"ruleId":"281","severity":1,"message":"282","line":222,"column":33,"nodeType":"283","messageId":"284","endLine":222,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":228,"column":33,"nodeType":"283","messageId":"284","endLine":228,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":234,"column":32,"nodeType":"283","messageId":"284","endLine":234,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":328,"column":15,"nodeType":"289","endLine":330,"endColumn":17},{"ruleId":"269","severity":1,"message":"280","line":73,"column":9,"nodeType":"271","messageId":"272","endLine":73,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":123,"column":7,"nodeType":"275","endLine":123,"endColumn":57},{"ruleId":"269","severity":1,"message":"290","line":42,"column":10,"nodeType":"271","messageId":"272","endLine":42,"endColumn":18},{"ruleId":"269","severity":1,"message":"291","line":42,"column":20,"nodeType":"271","messageId":"272","endLine":42,"endColumn":31},{"ruleId":"269","severity":1,"message":"292","line":43,"column":10,"nodeType":"271","messageId":"272","endLine":43,"endColumn":14},{"ruleId":"276","severity":1,"message":"285","line":60,"column":6,"nodeType":"278","endLine":60,"endColumn":8,"suggestions":"305"},{"ruleId":"269","severity":1,"message":"294","line":83,"column":9,"nodeType":"271","messageId":"272","endLine":83,"endColumn":20},{"ruleId":"269","severity":1,"message":"295","line":87,"column":9,"nodeType":"271","messageId":"272","endLine":87,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":126,"column":13,"nodeType":"275","endLine":126,"endColumn":63},{"ruleId":"276","severity":1,"message":"285","line":341,"column":6,"nodeType":"278","endLine":341,"endColumn":8,"suggestions":"306"},{"ruleId":"281","severity":1,"message":"282","line":357,"column":33,"nodeType":"283","messageId":"284","endLine":357,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":363,"column":33,"nodeType":"283","messageId":"284","endLine":363,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":369,"column":32,"nodeType":"283","messageId":"284","endLine":369,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":460,"column":15,"nodeType":"289","endLine":462,"endColumn":17},{"ruleId":"287","severity":1,"message":"288","line":193,"column":21,"nodeType":"289","endLine":195,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":218,"column":21,"nodeType":"289","endLine":220,"endColumn":23},{"ruleId":"269","severity":1,"message":"299","line":320,"column":25,"nodeType":"271","messageId":"272","endLine":320,"endColumn":41},{"ruleId":"276","severity":1,"message":"285","line":340,"column":6,"nodeType":"278","endLine":340,"endColumn":8,"suggestions":"307"},{"ruleId":"276","severity":1,"message":"285","line":55,"column":6,"nodeType":"278","endLine":55,"endColumn":8,"suggestions":"308"},{"ruleId":"273","severity":1,"message":"274","line":111,"column":13,"nodeType":"275","endLine":111,"endColumn":63},{"ruleId":"281","severity":1,"message":"282","line":143,"column":34,"nodeType":"283","messageId":"284","endLine":143,"endColumn":36},{"ruleId":"269","severity":1,"message":"301","line":1,"column":20,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"297","line":39,"column":9,"nodeType":"271","messageId":"272","endLine":39,"endColumn":17},{"ruleId":"269","severity":1,"message":"292","line":40,"column":10,"nodeType":"271","messageId":"272","endLine":40,"endColumn":14},{"ruleId":"269","severity":1,"message":"294","line":45,"column":9,"nodeType":"271","messageId":"272","endLine":45,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":111,"column":6,"nodeType":"278","endLine":111,"endColumn":8,"suggestions":"309"},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'handleInputError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["313"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.",["314"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.",["315"],"'setPopup' is assigned a value but never used.",["316"],"'setSearchOptions' is assigned a value but never used.",["317"],"'Slide' is defined but never used.",["318"],["319"],["320"],["321"],["322"],["323"],["324"],["325"],"no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"328","fix":"330"},{"desc":"328","fix":"331"},{"desc":"328","fix":"332"},{"desc":"328","fix":"333"},{"desc":"328","fix":"334"},{"desc":"326","fix":"335"},{"desc":"328","fix":"336"},{"desc":"328","fix":"337"},{"desc":"328","fix":"338"},{"desc":"328","fix":"339"},{"desc":"328","fix":"340"},{"desc":"328","fix":"341"},"Update the dependencies array to be: [setPopup]",{"range":"342","text":"343"},"Update the dependencies array to be: [getData]",{"range":"344","text":"345"},{"range":"346","text":"345"},{"range":"347","text":"345"},{"range":"348","text":"345"},{"range":"349","text":"345"},{"range":"350","text":"345"},{"range":"351","text":"343"},{"range":"352","text":"345"},{"range":"353","text":"345"},{"range":"354","text":"345"},{"range":"355","text":"345"},{"range":"356","text":"345"},{"range":"357","text":"345"},[422,424],"[setPopup]",[5106,5108],"[getData]",[1372,1374],[8959,8961],[3177,3179],[8242,8244],[1107,1109],[422,424],[5106,5108],[1372,1374],[8959,8961],[8242,8244],[1107,1109],[3177,3179]]